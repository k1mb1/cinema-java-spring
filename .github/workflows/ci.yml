name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: ./mvnw clean test
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: cinema-java-spring:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true
        
    - name: Test Docker image
      run: |
        docker run --rm -d --name test-app -p 8080:8080 cinema-java-spring:latest
        sleep 15
        # Ждем пока приложение полностью запустится
        for i in {1..30}; do
          if curl -f http://localhost:8080/actuator/health; then
            echo "Application is healthy!"
            docker stop test-app
            exit 0
          fi
          echo "Waiting for application to start... ($i/30)"
          sleep 2
        done
        echo "Application failed to start"
        docker logs test-app
        docker stop test-app
        exit 1
